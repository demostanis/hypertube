services:
  crocotube:
    build: app
    env_file: .env
    environment:
      MOVIE_DB_API: ${MOVIE_DB_API}
    develop:
      watch:
        - action: rebuild
          path: app
          target: /app/

  caddy:
    image: caddy:2.9
    depends_on:
      keycloak:
        condition: service_healthy
    ports:
      - "8000:80"
      - "8443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_logs:/var/log/caddy

  postgres:
    image: postgres:17.2
    env_file: .env
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./db/init.sh:/docker-entrypoint-initdb.d/init.sh
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: ${ROOT_DB_PASSWORD}

  keycloak:
    build: keycloak
    env_file: .env
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: ${KEYCLOAK_DB_PASSWORD}

      # TODO: what about HTTPS?
      KC_HTTP_PORT: 8000
      KC_HOSTNAME: http://keycloak.localhost:8000
      KC_HOSTNAME_BACKCHANNEL_DYNAMIC: true
      KC_HTTP_ENABLED: true

      KC_BOOTSTRAP_ADMIN_USERNAME: ${KEYCLOAK_ADMIN}
      KC_BOOTSTRAP_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_FORWARD_AUTH_SECRET: ${KEYCLOAK_FORWARD_AUTH_SECRET}
    command: start
    depends_on:
      - postgres
    healthcheck:
      test: test -f /opt/keycloak/ready
    networks:
      default:
        aliases:
          - keycloak.localhost # for oauth2-proxy

  forward-auth:
    env_file: .env
    depends_on:
      keycloak:
        condition: service_healthy
    image: quay.io/oauth2-proxy/oauth2-proxy:v7.7.1
    command: |
      --provider=keycloak-oidc
      --client-id=forward-auth
      --client-secret=$KEYCLOAK_FORWARD_AUTH_SECRET
      --whitelist-domain=*.localhost:*
      --oidc-issuer-url=http://keycloak.localhost:8000/realms/master
      --email-domain=* --code-challenge-method=S256
      --cookie-secure=false
      --cookie-secret=dinomalindinomal
      --http-address=0.0.0.0:4180
      --skip-provider-button
      --reverse-proxy=true

  redis:
    image: redis

  meilisearch:
    image: getmeili/meilisearch

  smtp4dev:
    image: rnwood/smtp4dev

include:
  - ./metrics/docker-compose.yml
  - ./jackett/docker-compose.yml

volumes:
  pg_data:
